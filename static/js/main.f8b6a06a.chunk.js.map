{"version":3,"sources":["reducers/weatherReducer.js","reducers/newsReducer.js","reducers/bgImageReducer.js","reducers/index.js","constants/actionTypes.js","store/configureStore.js","services/api.js","actions/actions.js","components/BgImage/index.js","components/SuperTitle/index.js","components/Weather/index.js","components/TextBar/index.js","containers/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["initialState","weather","news","randomPhoto","rootReducer","combineReducers","weatherReducer","state","action","type","payload","newsReducer","bgImageReducer","loaciton","location","urls","loggerMiddleware","createLogger","store","createStore","applyMiddleware","promiseMiddleware","thunkMiddleware","Api","getNews","fetch","Request","then","res","json","catch","err","console","log","getRandomPhoto","getWeather","latitude","longitude","dispatch","BgImage","props","changeBlendMode","blendIndex","Math","floor","random","blendModes","length","setState","imgCover","backgroundImage","regular","backgroundBlendMode","imageUrl","this","actions","prevProps","prevState","snapshot","setBgImageUrl","Fragment","onClick","style","className","React","Component","connect","bindActionCreators","SuperTitle","title","WebFont","load","google","families","top","left","status","Weather","getDescription","main","description","getTemp","temp","Number","toFixed","getIconUrl","icon","getName","name","getCountry","sys","country","getGeolocation","navigator","geolocation","getCurrentPosition","position","coords","iconCode","src","alt","clear","TextBar","getNewsTitles","articles","animateText","textStyle","weatherText","current","offsetWidth","createRef","setInterval","ref","map","item","index","formatedTitle","split","key","Home","fontSize","lineHeight","padding","fontFamily","App","BrowserRouter","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f8b6a06a.chunk.js","sourcesContent":["import * as types from '../constants/actionTypes'\r\n\r\nconst initialState = {\r\n    weather: {}\r\n}\r\n\r\nexport default function todos(state = initialState, action) {\r\n \r\n    switch (action.type) {\r\n  \r\n        case `${types.GET_WEATHER}_FULFILLED`:\r\n            return {\r\n                ...state,\r\n                weather: action.payload\r\n            }\r\n      \r\n            \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import * as types from '../constants/actionTypes'\r\n\r\nconst initialState = {\r\n    news: {}\r\n}\r\n\r\nexport default function todos(state = initialState, action) {\r\n \r\n    switch (action.type) {\r\n  \r\n        case `${types.GET_NEWS}_FULFILLED`:\r\n            return {\r\n                ...state,\r\n                news: action.payload\r\n            }\r\n      \r\n            \r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import * as types from '../constants/actionTypes'\r\n\r\nconst initialState = {\r\n  randomPhoto: {},\r\n}\r\n\r\nexport default function todos(state = initialState, action) {\r\n  \r\n  switch (action.type) {\r\n\r\n    \r\n    case `${types.GET_RANDOM_PHOTO}_FULFILLED`:\r\n      return {\r\n        ...state,\r\n        randomPhoto: {\r\n          loaciton: { ...action.payload.location },\r\n          urls: { ...action.payload.urls }\r\n        }\r\n      }\r\n\r\n      \r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport weatherReducer from '../reducers/weatherReducer'\r\nimport newsReducer from '../reducers/newsReducer'\r\nimport bgImageReducer from '../reducers/bgImageReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  weatherReducer,\r\n  newsReducer,\r\n  bgImageReducer\r\n})\r\n\r\nexport default rootReducer","export const GET_NEWS = 'GET_NEWS'\r\nexport const GET_RANDOM_PHOTO = 'GET_RANDOM_PHOTO'\r\nexport const GET_WEATHER = 'GET_WEATHER'","import thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport promiseMiddleware from 'redux-promise-middleware'\r\nimport rootReducer from '../reducers'\r\n\r\n\r\nconst loggerMiddleware = createLogger()\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(\r\n    promiseMiddleware(),\r\n    thunkMiddleware,\r\n    loggerMiddleware \r\n  )\r\n)\r\n\r\nexport default store","class Api {\r\n\r\n\tstatic getNews = () => (\r\n\t\tfetch(new Request(\r\n\t\t\t'https://newsapi.org/v2/top-headlines?' +\r\n\t\t\t'country=us&' +\r\n\t\t\t'apiKey=d281384e581d44fda67ca1395c4d904a'\r\n\t\t))\r\n\t\t.then(function (res) {\r\n\t\t\treturn res.json()\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log('Error happened during fetching!', err)\r\n\t\t\treturn err\r\n\t\t})\t\t\r\n\t)\r\n\r\n\t\r\n\tstatic getRandomPhoto = () => (\r\n\t\tfetch('https://api.unsplash.com/photos/random/?client_id=7bb44829ebfb671742ab6f123c6581e0eca237754773b58d64940a82c82065f9')\r\n\t\t.then((res) => {\r\n\t\t\treturn res.json()\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.log('Error happened during fetching!', err)\r\n\t\t\treturn err\r\n\t\t})\r\n\t)\r\n\r\n\r\n\tstatic getWeather = (latitude, longitude) => (\r\n\t\tfetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=89b5e7279338d44e816ac45c030ac220`)\r\n\t\t.then(res => res.json())\r\n\t\t.catch(err => console.log('Error happened during fetching!', err))\r\n\t)\r\n\r\n}\r\n\r\nexport default Api","import * as types from '../constants/actionTypes'\r\nimport Api from '../services/api'\r\n\r\n\r\nexport const getNews = () => (dispatch) => dispatch({\r\n  type: types.GET_NEWS,\r\n  payload: Api.getNews()\r\n})\r\n\r\n\r\nexport const getRandomPhoto = () => (dispatch) => dispatch({\r\n  type: types.GET_RANDOM_PHOTO,\r\n  payload: Api.getRandomPhoto()\r\n})\r\n\r\n\r\nexport const getWeather = (latitude, longitude) => (dispatch) => dispatch({\r\n  type: types.GET_WEATHER,\r\n  payload: Api.getWeather(latitude, longitude)\r\n})","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../actions/actions' \r\n\r\nimport './styles.css'\r\n\r\nclass BgImage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\t\t\timageUrl: '',\r\n\t\t\tblendModes: [\r\n\t\t\t\t'normal', 'multiply', 'screen', 'overlay',\r\n\t\t\t\t'darken','lighten','color-dodge','color-burn',\r\n\t\t\t\t'hard-light','soft-light','difference','exclusion',\r\n\t\t\t\t'hue','saturation','color','luminosity'\r\n\t\t\t],\r\n\t\t\timgCover: {},\r\n\t\t\trandomPhoto: {}\r\n        }\r\n    }\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.props.actions.getRandomPhoto()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) { \r\n\t\tthis.setBgImageUrl(prevProps)\r\n\t}\r\n\t\r\n\r\n\tsetBgImageUrl (prevProps) {\r\n\t\tif (prevProps.randomPhoto !== this.props.randomPhoto) {\r\n\t\t\tconst initialBlendIndex = 10\r\n\t\t\tthis.setState({\r\n\t\t\t\timgCover: {\r\n\t\t\t\t\tbackgroundImage: `url(${ this.props.randomPhoto.urls.regular })`,\r\n\t\t\t\t\tbackgroundBlendMode: this.state.blendModes[initialBlendIndex],\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tchangeBlendMode = () => {\r\n\t\tconst blendIndex = Math.floor(Math.random() * Math.floor(this.state.blendModes.length));\t\t\r\n\t\tthis.setState({\r\n\t\t\timgCover: {\r\n\t\t\t\tbackgroundImage: `url(${ this.props.randomPhoto.urls.regular })`,\r\n\t\t\t\tbackgroundBlendMode: this.state.blendModes[blendIndex],\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst BackgroundLoader = () => {\r\n\t\t\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<div onClick={ this.changeBlendMode } \r\n\t\t\t\t\t\tstyle={ this.state.imgCover } \r\n\t\t\t\t\t\tclassName=\"imgCover\"></div>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn(\r\n\t\t\t<BackgroundLoader />\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nBgImage.propTypes = {\r\n\trandomPhoto: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\trandomPhoto: state.bgImageReducer.randomPhoto\t\r\n})\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n})\r\n  \r\nexport default connect(mapStateToProps,mapDispatchToProps)(BgImage)  \r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport WebFont from 'webfontloader'\r\nimport RefreshIndicator from 'material-ui/RefreshIndicator'\r\nimport './styles.css'\r\n\r\n\r\nconst SuperTitle = ({ title }) => {\r\n  \r\n  WebFont.load({\r\n    google: {\r\n      families: [\r\n        'Holtwood+One+SC',\r\n        'Roboto'\r\n      ]\r\n    }\r\n  })\r\n  \r\n  const RenderElement = () => {\r\n    \r\n\r\n    if (title) {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"super-title\">\r\n            { title }\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      return (\r\n        <RefreshIndicator\r\n          top={0}\r\n          left={0}\r\n          status=\"loading\" />\r\n      )\r\n    }\r\n  }\r\n\r\n  return <RenderElement /> \r\n}\r\n\r\nSuperTitle.propTypes = {\r\n  title: PropTypes.string\r\n}\r\n\r\nexport default SuperTitle\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../actions/actions' \r\n\r\nimport './styles.css'\r\n\r\n\r\nclass Weather extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            iconCode: '',\r\n            imageUrl: '',\r\n            name: '',\r\n            country: '',\r\n            temp: 0,\r\n            main: '',\r\n            description: '',\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.getGeolocation()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) { \r\n        this.getIconUrl(prevProps)\r\n        this.getName(prevProps)\r\n        this.getCountry(prevProps)\r\n        this.getTemp(prevProps)\r\n        this.getDescription(prevProps) \r\n    }\r\n\r\n    getDescription = (prevProps) => {\r\n        if (this.props.weather.weather !== prevProps.weather.weather) {\r\n            this.setState({\r\n                main: this.props.weather.weather[0].main,\r\n                description: this.props.weather.weather[0].description\r\n            })\r\n        }\r\n    }\r\n\r\n    getTemp = (prevProps) => {\r\n        if (this.props.weather.main !== prevProps.weather.main) {            \r\n            this.setState({\r\n                temp: ( Number(this.props.weather.main.temp) / 10 ).toFixed(1)\r\n            })\r\n        }\r\n    }\r\n\r\n    getIconUrl = (prevProps) => {\r\n        if (this.props.weather.weather !== prevProps.weather.weather) {            \r\n            this.setState({\r\n                imageUrl: `https://openweathermap.org/img/wn/${this.props.weather.weather[0].icon}.png`\r\n            })\r\n        }\r\n    }\r\n\r\n    getName = (prevProps) => {\r\n        if (this.props.weather.name !== prevProps.weather.name) {\r\n            this.setState({\r\n                name: this.props.weather.name\r\n            })\r\n        }\r\n    }\r\n\r\n    getCountry = (prevProps) => {\r\n        if (this.props.weather.sys !== prevProps.weather.sys) {\r\n            this.setState({\r\n                country: this.props.weather.sys.country\r\n            })\r\n        }\r\n\r\n    }\r\n    \r\n    getGeolocation = () => {\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                this.props.actions.getWeather(\r\n                    position.coords.latitude,\r\n                    position.coords.longitude\r\n                )\r\n            })\r\n        } else {\r\n            console.log('Geolocation is not supported by this browser.')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"weather-icon\">\r\n                    <div className=\"box\">\r\n                        <div className=\"text\">\r\n                            <h2>{ this.state.name }, { this.state.country }</h2>\r\n                            <h3>{ this.state.temp }°</h3>\r\n                            <h4>{ this.state.description }</h4>\r\n                            <h5>{ this.state.main }</h5>\r\n                        </div>\r\n                        <img src={this.state.imageUrl} alt=\"weather icon\" />\r\n                        <div style={{clear: 'both'}} ></div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nWeather.propTypes = {\r\n    weather: PropTypes.object,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    weather: state.weatherReducer.weather,\r\n})\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n})\r\n  \r\nexport default connect(mapStateToProps,mapDispatchToProps)(Weather)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\nimport * as actions from '../../actions/actions' \r\n\r\nimport './styles.css'\r\n\r\nclass TextBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            articles: [],\r\n            textStyle: { left: 0 }\r\n        }\r\n        this.weatherText = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getNews()\r\n        setInterval(this.animateText, 10)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) { \r\n        this.getNewsTitles(prevProps)\r\n    }\r\n\r\n    getNewsTitles = (prevProps) => {\r\n        if (this.props.articles !== prevProps.articles) {\r\n            this.setState({\r\n                articles: this.props.articles\r\n            })\r\n        }    \r\n    }\r\n\r\n    getNews = () => {\r\n\t\tthis.props.actions.getNews()\r\n    }\r\n\r\n    animateText = () => {\r\n        const left = Number( this.state.textStyle.left ) \r\n        const width = Number( this.weatherText.current.offsetWidth * -1 / 2 )\r\n\r\n        if (left > width) {            \r\n            this.setState({ textStyle: { left: left - 1 } })\r\n        } else {\r\n            this.setState({ textStyle: { left: 0 } })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const Articles = () => {\r\n            let result = this.state.articles.map((item, index) => {\r\n                const formatedTitle =  item.title.split(' - ')\r\n                return ( \r\n                    <span key={index}> \r\n                        &nbsp;&nbsp;&nbsp;.&nbsp;&nbsp;&nbsp;\r\n                        { formatedTitle[0] }\r\n                        <small>&nbsp;-&nbsp;{ formatedTitle[1] }</small>\r\n                    </span> \r\n                )\r\n            })\r\n            return result\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"text-bar\">\r\n                    <p style={this.state.textStyle} ref={this.weatherText}>\r\n                        <Articles />\r\n                    </p>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nTextBar.propTypes = {\r\n\tarticles: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    articles: state.newsReducer.news.articles\r\n})\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    actions: bindActionCreators(actions, dispatch)\r\n})\r\n  \r\nexport default connect(mapStateToProps,mapDispatchToProps)(TextBar)  ","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\n\r\n// CUSTOM COMPONENTS\r\nimport BgImage from '../../components/BgImage'\r\nimport SuperTitle from '../../components/SuperTitle'\r\nimport Weather from '../../components/Weather'\r\n// import TesteComponent from '../../components/TesteComponent'\r\nimport TextBar from '../../components/TextBar'\r\n\r\nimport * as actions from '../../actions/actions' \r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\t\r\n\t\tthis.textStyle = {\r\n\t\t\tfontSize: 16,\r\n  \t\t\tlineHeight: '26px',\r\n\t\t\tpadding: 50,\r\n\t\t\tfontFamily: \"'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif\"\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\r\n\t\t\t\t<SuperTitle title=\"THIAGO COLEN\"/>\r\n\r\n\t\t\t\t<BgImage />\r\n\t\t\t\t\t\r\n\t\t\t\t<Weather />\r\n\r\n\t\t\t\t<TextBar />\r\n\r\n\t\t\t\t<div style={this.textStyle}>\r\n\t\t\t\t\tPhasellus turpis quam, lacinia in tincidunt quis, rhoncus vitae augue. Vivamus porttitor imperdiet enim ut mattis. Proin id sagittis arcu, at fringilla lectus. Donec iaculis, arcu et dapibus dignissim, ipsum lectus auctor sem, non condimentum odio ipsum a neque. Vestibulum facilisis lacus id enim fringilla, quis placerat augue eleifend. Donec gravida leo tempor, pharetra tortor dapibus, consequat ipsum. Sed facilisis porta nulla non dapibus. Curabitur eu mattis felis, non auctor augue. Nullam efficitur quam et consectetur mollis. Sed hendrerit sollicitudin pharetra. Pellentesque sit amet ligula id enim aliquam rhoncus et nec arcu. Aenean sed vehicula ipsum. Suspendisse sodales hendrerit purus eu porta. Nullam et consequat enim. Sed justo ligula, tempor eu massa eget, fermentum imperdiet nisl. Nam commodo nisi ac erat condimentum, sed pharetra velit dignissim.\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tVivamus viverra tortor nisi, ac facilisis risus pulvinar sed. Pellentesque volutpat lorem vel aliquam cursus. Phasellus hendrerit, odio in euismod pulvinar, sapien tellus faucibus velit, at sodales justo leo pretium purus. Donec mollis, orci et posuere ullamcorper, mauris sapien feugiat dolor, eget luctus mauris erat at elit. Donec eget sem ac erat porta malesuada. Etiam eu ante id justo laoreet consequat quis sed ex. Praesent porttitor, odio sed ornare pellentesque, ex odio blandit metus, a bibendum risus justo ut ligula. Proin sodales sodales nisi, ut efficitur arcu iaculis at. Cras tincidunt efficitur ex, quis ultricies lectus convallis et. Suspendisse maximus dictum accumsan. Nam luctus risus lorem, eget faucibus est placerat at. Etiam posuere nec orci ac dignissim. Vivamus sed cursus tellus. Fusce at sem nisi.\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\tNullam volutpat cursus libero, ac accumsan sapien hendrerit sed. Cras justo est, tincidunt at nulla vitae, aliquam malesuada arcu. Nunc ultrices accumsan leo, ut pharetra arcu dapibus sit amet. Proin sit amet ex tempor, vestibulum mauris vel, tincidunt augue. In ac cursus eros, facilisis tristique metus. Maecenas ornare suscipit metus et lacinia. Quisque mollis lorem rutrum, cursus nisi eu, tempor magna.\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nHome.propTypes = {\r\n\trandomPhoto: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\tactions: bindActionCreators(actions, dispatch)\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Home)\r\n","import React from 'react'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/configureStore'\r\n\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\n\r\nimport Home from './containers/Home'\r\nimport './App.css'\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <MuiThemeProvider>\r\n          <BrowserRouter>\r\n            <React.Fragment>\r\n              <Route exact path=\"/\" component={Home}/> \r\n              <Route exact path=\"/wellcome\" component={Home}/> \r\n            </React.Fragment>\r\n          </BrowserRouter>\r\n        </MuiThemeProvider>\r\n      </Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}